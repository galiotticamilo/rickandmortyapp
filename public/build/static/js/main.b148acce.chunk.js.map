{"version":3,"sources":["components/HomePage/HomePage.jsx","components/Navbar/Navbar.jsx","context/Context.jsx","components/Random/Random.jsx","components/Character/Character.jsx","components/Pagination/Pagination.jsx","components/Search/Search.jsx","components/Advanced/Advanced.jsx","components/CharacterDetail/CharacterDetail.jsx","App.js","reportWebVitals.js","index.js"],"names":["CharacterList","className","Navbar","to","RAMContext","createContext","useRAM","useContext","RAMProvider","props","urlDefault","useState","characters","setCharacters","info","setInfo","searchValue","setSearchValue","count","setCount","urlAdvanced","setUrlAdvanced","noResults","setNoResults","getCharacters","url","a","fetch","response","json","data","error","results","Provider","value","updateDatos","event","target","children","Random","randomCharacter","setRandomCharacter","useEffect","randomNum","Math","floor","random","getRandomCharacter","array","push","map","elem","src","image","name","species","gender","status","origin","location","onClick","Character","id","Pagination","prev","next","Search","searchUpdate","sValue","placeholder","onChange","type","Advanced","stateFilter","setStateFilter","filterStatus","setFilterStatus","isFilter","filter","tipe","label","selected","hidden","CharacterDetail","useParams","character","setCharacter","getCharacterDetail","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b148acce.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../HomePage/HomePage.css\"\r\n\r\nfunction CharacterList() {\r\n\r\n    return(\r\n        <div className=\"home-page-container\">\r\n            <div className=\"home-page\">\r\n                <div className=\"inv-box\"></div>\r\n                <div className=\"inv-box-homepage\"></div>\r\n                <h1>WELCOME TO RICK & MORTY WIKI</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterList","import React from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport \"../Navbar/Navbar.css\"\r\n\r\nfunction Navbar() {\r\n    return(\r\n        <nav className=\"main-navbar-container\">\r\n            <div className=\"navbar-container\">\r\n                <Link className=\"rick-morty\"to=\"/\">\r\n                    <h1>Rick&Morty Wiki</h1>\r\n                </Link>\r\n                <div className=\"links-container\">\r\n                    <Link className=\"navbar-link\" to=\"/\">\r\n                        <div>Home</div>\r\n                    </Link>\r\n                    <Link className=\"navbar-link\" to=\"/advanced-search\">\r\n                        <div>Search</div>\r\n                    </Link>\r\n                    <Link className=\"navbar-link\" to=\"/random-character\">\r\n                        <div>Random</div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const RAMContext = createContext()\r\nconst useRAM = () => useContext(RAMContext)\r\nexport default useRAM\r\n\r\nexport const RAMProvider = props => {\r\n\r\n    const urlDefault = `https://rickandmortyapi.com/api/character`\r\n\r\n    const [characters, setCharacters] = useState()\r\n    const [info, setInfo] = useState(\"\")\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n    const [count, setCount] = useState(0)\r\n    const [urlAdvanced, setUrlAdvanced] = useState(urlDefault)\r\n    const [noResults, setNoResults] = useState(\"\")\r\n\r\n    const updateDatos = (event) => {\r\n        setSearchValue(event.target.value)\r\n    }\r\n\r\n    const getCharacters = async (url) => {\r\n        const response = await fetch(url)\r\n        const data = await response.json()\r\n        if(data.error === \"There is nothing here\"){\r\n            setNoResults(data.error)\r\n            setInfo(\"\")\r\n            setCharacters(\"\")\r\n            setCount(\"\")\r\n        } else {\r\n            setInfo(data.info)\r\n            setCharacters(data.results)\r\n            setCount(data.info.count)\r\n        } \r\n    }\r\n    \r\n    return (\r\n        <RAMContext.Provider value={{\r\n            getCharacters,\r\n            info,\r\n            characters,\r\n            searchValue,\r\n            setSearchValue,\r\n            updateDatos,\r\n            setInfo,\r\n            count,\r\n            urlDefault,\r\n            urlAdvanced, \r\n            setUrlAdvanced,\r\n            noResults\r\n            }}\r\n            >\r\n            {props.children}\r\n        </RAMContext.Provider>\r\n    )\r\n}\r\n","import React, {useState} from \"react\"\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport useRAM from \"../../context/Context\"\r\nimport \"../Random/Random.css\"\r\n\r\nfunction Random() {\r\n\r\n    const {count, getCharacters, urlDefault} = useRAM()\r\n\r\n    const [randomCharacter, setRandomCharacter] = useState()\r\n\r\n    useEffect(() => {\r\n        getCharacters(urlDefault)\r\n    }, [])\r\n\r\n    const randomNum = (count) => {\r\n        return (Math.floor(Math.random() * (count - 1) + 1))\r\n    }\r\n\r\n    const getRandomCharacter = async () => {\r\n        const response = await fetch(`https://rickandmortyapi.com/api/character/${randomNum(count)}`)\r\n        const data = await response.json()\r\n        let array = []\r\n        array.push(data)\r\n        setRandomCharacter(array)\r\n    }\r\n    \r\n    return(\r\n        <div className=\"main-random-container\">\r\n            <div className=\"buttom-random-detail-container\">\r\n                {randomCharacter &&\r\n                    randomCharacter.map(elem => \r\n                        <div className=\"random-detail-container\">\r\n                                <div className=\"card\">\r\n                                    <img className=\"detail-img\"src={elem.image}/>\r\n                                    <div className=\"data\">\r\n                                        <div>\r\n                                            <div>Name: <span>{elem.name}</span></div>\r\n                                            <div>Specie: <span>{elem.species}</span></div>\r\n                                            <div>Gender: <span>{elem.gender}</span></div>\r\n                                            {\r\n                                            (elem.status === \"Alive\") ? \r\n                                                <div className=\"status\">\r\n                                                    <div className=\"green\">•</div>\r\n                                                    {elem.status} \r\n                                                </div> \r\n                                                : \r\n                                                <div className=\"status\">\r\n                                                    <div className=\"red\">•</div>\r\n                                                    {elem.status} \r\n                                                </div> \r\n                                            }\r\n                                            <div>Origin: <span>{elem.origin.name}</span></div>\r\n                                            <div>Location: <span>{elem.location.name}</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                {count &&\r\n                    <button className=\"random-button\" onClick={getRandomCharacter}>\r\n                        <div>Generate random character</div>\r\n                    </button> \r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Random","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"../Character/Character.css\"\r\n\r\nfunction Character( {data} ) {\r\n\r\n    return(\r\n        <div className=\"main-character-container\">\r\n            {\r\n                data?.map(elem => \r\n                    <div className=\"character-container\">\r\n                        <div className=\"name\">{elem.name}</div>\r\n                        <Link to={`/character/${elem.id}`}>\r\n                            <img className=\"img\" src={elem.image}/>\r\n                        </Link>\r\n                        <div className=\"info-container\">\r\n                            <div className=\"species\">\r\n                                {elem.species}\r\n                            </div>\r\n                            {\r\n                            (elem.status === \"Alive\") ? \r\n                                <div className=\"status\">\r\n                                    <div className=\"green\">•</div>\r\n                                    {elem.status} \r\n                                </div> \r\n                                : \r\n                                <div className=\"status\">\r\n                                    <div className=\"red\">•</div>\r\n                                    {elem.status} \r\n                                </div> \r\n                            }\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Character","import React from \"react\";\r\nimport useRAM from \"../../context/Context\"\r\nimport \"../Pagination/Pagination.css\"\r\n\r\nfunction Pagination() {\r\n\r\n    const {info, getCharacters} = useRAM()\r\n\r\n    const onPrev = () => {\r\n        getCharacters(info.prev)\r\n    }\r\n    \r\n    const onNext = () => {\r\n        getCharacters(info.next)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"container-buttons\">\r\n                {info.prev ? \r\n                <button className=\"prev-next\" onClick={onPrev}> &lt; Prev</button>\r\n                :\r\n                <button className=\"inv-button\"></button>\r\n                }\r\n                {info.next && \r\n                <button className=\"prev-next\" onClick={onNext}>Next &gt;</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination","import React from \"react\"\r\nimport \"../Search/Search.css\"\r\n\r\nfunction Search( {searchUpdate, sValue} ) {\r\n\r\n    return(\r\n        <div>\r\n            <input className=\"search\" placeholder=\"Search\" onChange={searchUpdate} value={sValue ? sValue : ''} type=\"text\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React, {useEffect, useState} from \"react\"\r\nimport Character from \"../Character/Character\"\r\nimport Pagination from \"../Pagination/Pagination\"\r\nimport useRAM from \"../../context/Context\"\r\nimport Search from \"../Search/Search\"\r\nimport \"../Advanced/Advanced.css\"\r\n\r\nfunction Advanced() {\r\n\r\n    const {searchValue, getCharacters, characters, updateDatos, setSearchValue, urlDefault, urlAdvanced, setUrlAdvanced, noResults} = useRAM()\r\n\r\n    const [stateFilter, setStateFilter] = useState()\r\n    const [filterStatus, setFilterStatus] = useState(true)\r\n\r\n    const genderArr = [\r\n        {\r\n            gender: \"female\"\r\n        },\r\n        {\r\n            gender: \"male\"\r\n        },\r\n        {\r\n            gender: \"unknown\"\r\n        }\r\n    ]\r\n\r\n    const statusArr = [\r\n        {\r\n            status: \"alive\"\r\n        },\r\n        {\r\n            status: \"dead\"\r\n        },\r\n        {\r\n            status: \"unknown\"\r\n        }\r\n    ]\r\n\r\n    const speciesArr = [\r\n        {\r\n            species: \"human\"\r\n        },\r\n        {\r\n            species: \"alien\"\r\n        },\r\n        {\r\n            species: \"unknown\"\r\n        }\r\n    ]\r\n\r\n    const clear = () => {\r\n        setSearchValue(\"\")\r\n        setUrlAdvanced(`${urlDefault}/?name=${searchValue}`)\r\n        setStateFilter()\r\n        isFilter()\r\n    }\r\n\r\n    const isFilter = () => {\r\n        if (stateFilter) {\r\n            setFilterStatus(false)\r\n            getCharacters(urlAdvanced)\r\n        } else {\r\n            setFilterStatus(true)\r\n            getCharacters(urlDefault)\r\n        }\r\n    }\r\n\r\n    const filter = (value, tipe) => {\r\n        setStateFilter({value, tipe})\r\n\r\n        searchValue ? \r\n        setUrlAdvanced(`${urlDefault}/?${tipe}=${value}&name=${searchValue}`)\r\n        : \r\n        setUrlAdvanced(`${urlDefault}/?${tipe}=${value}`) \r\n    }\r\n\r\n    const searchUpdate = (event) => {\r\n        setSearchValue(event.target.value);\r\n\r\n        stateFilter ? \r\n        setUrlAdvanced(`${urlDefault}/?${stateFilter.tipe}=${stateFilter.value}&name=${searchValue}`) \r\n        : \r\n        setUrlAdvanced(`${urlDefault}/?name=${searchValue}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!searchValue) {\r\n            isFilter()\r\n        } else {\r\n            getCharacters(urlAdvanced)\r\n        }\r\n    }, [urlAdvanced, searchValue, stateFilter])\r\n\r\n    return(\r\n        <div className=\"general-container\">\r\n            <div className=\"main-advanced-container\">\r\n                <div className=\"advanced-container\">\r\n                    <div className=\"search-filters-container\">\r\n                        <div className=\"inv-box\"></div>\r\n                        <Search className=\"input-search\" searchUpdate={searchUpdate} sValue={searchValue}/>\r\n                        <div className=\"filter-container\">\r\n                            <div className=\"clear\" onClick={clear}>Clear filters</div>\r\n                            <div className=\"select-container\">\r\n                                <label>Filter by</label>\r\n                                <select className=\"option-select\">\r\n                                    <optgroup className=\"group\" label=\"Gender\">\r\n                                        {genderArr.map(elem => <option onClick={() => filter(elem.gender, \"gender\")}>{elem.gender}</option>)}\r\n                                        <option selected={filterStatus} hidden>Select</option> \r\n                                    </optgroup>\r\n                                    <optgroup className=\"group\" label=\"Status\">\r\n                                        {statusArr.map(elem => <option onClick={() => filter(elem.status, \"status\")}>{elem.status}</option>)}\r\n                                    </optgroup>\r\n                                    <optgroup className=\"group\" label=\"Species\">\r\n                                        {speciesArr.map(elem => <option onClick={() => filter(elem.species, \"species\")}>{elem.species}</option>)}\r\n                                    </optgroup>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        {characters && <Pagination updateDatos={updateDatos}/>}\r\n                    </div>\r\n                    \r\n                </div>\r\n                {\r\n                    characters ?\r\n                    <div>\r\n                        <Character\r\n                        data={characters}\r\n                        />\r\n                    </div> : \r\n                    <h2 className=\"no-results\">{noResults}...</h2>\r\n                }\r\n                {characters && <Pagination/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Advanced","import React, {useState, useEffect} from \"react\"\r\nimport { useParams } from \"react-router\"\r\nimport {Link} from \"react-router-dom\"\r\nimport \"../CharacterDetail/CharacterDetail.css\"\r\n\r\nfunction CharacterDetail() {\r\n\r\n    const { id } = useParams()\r\n\r\n    const [character, setCharacter] = useState()\r\n\r\n    const getCharacterDetail = async () => {\r\n        const response = await fetch(`https://rickandmortyapi.com/api/character/${id}`)\r\n        const data = await response.json()\r\n        setCharacter(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCharacterDetail()\r\n    }, [])\r\n\r\n    return(\r\n        <div className=\"main-detail-container\">\r\n                    {character && \r\n                        <div className=\"card\">\r\n                            <img className=\"detail-img\"src={character.image}/>\r\n                            <div className=\"data\">\r\n                                    <div className=\"detail-single-info\">Name: <span>{character.name}</span></div>\r\n                                    <div className=\"detail-single-info\">Specie: <span>{character.species}</span></div>\r\n                                    <div className=\"detail-single-info\">Gender: <span>{character.gender}</span></div>\r\n                                    {\r\n                                    (character.status === \"Alive\") ? \r\n                                        <div className=\"status\">\r\n                                            <div className=\"green\">•</div>\r\n                                            {character.status} \r\n                                        </div> \r\n                                        : \r\n                                        <div className=\"status\">\r\n                                            <div className=\"red\">•</div>\r\n                                            {character.status} \r\n                                        </div> \r\n                                    }\r\n                                    <div>Origin: <span>{character.origin.name}</span></div>\r\n                                    <div className=\"location-margin\">Location: <span>{character.location.name}</span></div>\r\n                            </div>\r\n                            <Link className=\"back-button-container\" to=\"/advanced-search\">\r\n                                <div className=\"back-button\">Back</div>\r\n                            </Link>\r\n                        </div>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterDetail","import React from 'react';\nimport './App.css';\nimport HomePage from './components/HomePage/HomePage';\nimport Navbar from './components/Navbar/Navbar';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Random from \"./components/Random/Random\"\nimport Advanced from './components/Advanced/Advanced';\nimport CharacterDetail from './components/CharacterDetail/CharacterDetail';\nimport { RAMProvider } from './context/Context';\n\nfunction App() {\n\n  return (\n    <RAMProvider>\n      <BrowserRouter>\n        <Navbar/>\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage/>\n            </Route>\n\n            <Route exact path=\"/random-character\">\n              <Random/>\n            </Route>\n\n            <Route exact path=\"/advanced-search\">\n              <Advanced/>\n            </Route>\n\n            <Route exact path=\"/character/:id\">\n              <CharacterDetail/>\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </RAMProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}